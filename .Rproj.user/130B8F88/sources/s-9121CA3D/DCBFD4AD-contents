---
title: "Project 1_Yuwan Guo"
author: "Yuwan Guo"
date: "3/15/2020"
output:
  html_document:
    df_print: paged
  pdf_document: default
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE, eval = TRUE, fig.align = "center", warning = F, message = F,
tidy=TRUE, tidy.opts=list(width.cutoff=60), R.options=list(max.print=100))
```

## Yuwan Guo
## yg7569


#### 0. Introduction (4 pts)
*I have chosen the COVID-19 confirmed cases, deaths, and recovered datasets. As the novel coronavirus spreads to the U.S. and is recently considered a pandemic by WHO, it is important that we continuously monitor the nubmer of cases confirmed, the number of deaths, and the nubmer of recovered everyday. The Johns Hopkins University has been doing a great job in keeping track of the number of confirmed cases and deaths everyday and has been updating the datasets on this website: https://data.humdata.org/dataset/novel-coronavirus-2019-ncov-cases*

*The COVID-19 confirmed cases dataset has 442 observations and 57 columns. The dataset is long and untidy. The variables include countries/regions, provinces/states, the respective latitude and longitude, and the cumulative nubmer of cases from 1/22/2019 to 3/14/2020. Since each date is a column, the dataset is very long. I plan to convert the dataset to a wide dataset so that every observation has its own row and every variable its own column.*

*Similarly, the COVID-19 deaths and recovered datasets both have 442 observations and 57 columns. The datasets are both long and untidy. Since these three datasets have countries/states in common, I plan to join these three datasets together.*


#### 1. Tidying: Rearranging Wide/Long (8 pts)
```{R}
library(tidyverse)
library(stringr)
library(knitr)
library(kableExtra)
library(ggplot2)
library(extrafont)
library(ggthemes)
library(ggmap)
library(maps)
library(mapdata)
library(plotly)
library(cluster)
library(factoextra)
print(getwd())

## read csv files
covid19_confirmed <- read.csv("COVID19 confirmed.csv")
covid19_death <- read.csv("COVID19 deaths.csv")
covid19_recover <- read.csv("COVID19 recovered.csv")

covid19_confirmed <- as.data.frame(covid19_confirmed)
covid19_death <- as.data.frame(covid19_death)
covid19_recover <- as.data.frame(covid19_recover)
```

```{R}
## Rename some columns and tidy covid19_confirmed dataset
colnames(covid19_confirmed)

covid19_confirmed <- covid19_confirmed %>% rename_at(vars(starts_with("X")),
                                                     funs(str_replace(.,"X","")))

covid19_confirmed <- rename(covid19_confirmed, "Province/State"="Province.State",
                            "Country/Region"="Country.Region", 
"Latitude"="Lat", "Longitude"="Long")

covid19_confirmed <- covid19_confirmed %>%
  pivot_longer(cols=c("1.22.20":"3.14.20"), names_to="Date", values_to="Confirmed Cases") 

glimpse(covid19_confirmed)

## Rename some columns and tidy covid19_death dataset
colnames(covid19_death)

covid19_death <- covid19_death %>% rename_at(vars(starts_with("X")), 
                                             funs(str_replace(.,"X","")))

covid19_death <- rename(covid19_death, "Province/State"="Province.State",
"Country/Region"="Country.Region",
"Latitude"="Lat", "Longitude"="Long")

covid19_death <- covid19_death %>%
  pivot_longer(cols=c("1.22.20":"3.14.20"), names_to="Date", values_to="Deaths") 

glimpse(covid19_death)

## Rename some columns and tidy covid19_recover dataset
colnames(covid19_recover)

covid19_recover <- covid19_recover %>% rename_at(vars(starts_with("X")), 
                                                 funs(str_replace(.,"X","")))

covid19_recover <- rename(covid19_recover, "Province/State"="Province.State", 
                          "Country/Region"="Country.Region",
"Latitude"="Lat", "Longitude"="Long")

covid19_recover <- covid19_recover %>%
  pivot_longer(cols=c("1.22.20":"3.14.20"), names_to="Date", values_to="Recovered")

glimpse(covid19_recover)
```
*Firstly, I read the csv datasets that I downloaded. Then after I took a look at the column names, I changed some column names into my prefered names. Finally, I used 'pivot_longer' to convert a wide dataset to a long dataset with every observation having its own row and every variable its own column.* 

*After converting the wide dataset to a long dataset, the new dataset contains 6 variables, including Province/State, Country/Region, respective latitude and longtitude, date, and cases. The total observations for each dataset is 23426.*


#### 2. Joining/Merging (8 pts)
```{R}
## Firstly, join covid19_confirmed and covid19_death
joined_1 <- full_join(covid19_confirmed, covid19_death, by=NULL)

glimpse(joined_1)

## Secondly, join joined_1 and covid19_recover
fulldata <- full_join(joined_1, covid19_recover, by=NULL)

glimpse(fulldata)
```
*Since I have three datasets, I firstly joined covid19_confirmed dataset with covid19_death dataset, and then joined the combinded dataset with covid19_recover dataset. Since these three datasets have the same number of observations and columns, I could use either 'left_join', 'right_join', 'inner_join', or 'full_join'. Therefore, I chose 'full_join', but all four join methods will result in the same combined dataset. No cases were dropped.*

*Since "Province/State", "Country/Region", "Latitude", "Longitude", and "Date" are all common variables among these three datasets, I used 'by=Null' so that 'full_join' would do a natural join using all variables with common names across the two datasets. In fact, this is the only way that works for my datasets. I attempted using by="Date" and by="Country/Region", but neither of these resulted in the desired merged dataset because when I specify by which variable to join, R identifies other variables as different, and duplicate the same columns.*


#### 3. Wrangling (40 pts)
```{R}
## using mutate to add % death and % recovered for each country everyday
fulldata <- fulldata %>% 
  mutate("% death"=100*Deaths/`Confirmed Cases`,
         "% recovered"=100*Recovered/`Confirmed Cases`)%>%
  mutate_at(vars(`% death`, `% recovered`), funs(round(., 2)))

glimpse(fulldata)

## using filter, select, and arrange to grab China's and America's stats
China <- fulldata %>% filter (`Country/Region`=="China")%>%
  select(-Longitude,-Latitude)

## 3/14/2020 cumulative & current cases in China
China_03142020 <- China %>% filter(Date=="3.14.20") %>%
  arrange(desc(`Confirmed Cases`)) %>%
  mutate("Current cases"=`Confirmed Cases`-Deaths-Recovered)

kable(China_03142020, booktabs=T, row.names=F, caption = "Table 1: China's cumulative and current (03/14/2020) confirmed cases, deaths, and recovered by province")%>%
kable_styling(latex_options = "striped")

Chinasummary <- China_03142020 %>%
  summarize("Total cumulative confirmed cases"=sum(`Confirmed Cases`), "Total deaths"=sum(Deaths), "Total recovered"=sum(Recovered)) %>%
  mutate("Total current cases"=`Total cumulative confirmed cases`-`Total deaths`-`Total recovered`, "% Death" = 100*`Total deaths`/`Total cumulative confirmed cases`, "% Recovery"=100*`Total recovered`/`Total cumulative confirmed cases`)%>%
  mutate_at(vars(`% Death`, `% Recovery`), funs(round(., 2)))

kable(Chinasummary, booktabs=T, row.names=F, caption = "Table 2: Summary of China's cumulative and current cases, deaths, and recovery as of 3/14/20")%>%
kable_styling(latex_options = "striped")

US <- fulldata %>% filter (`Country/Region`=="US")%>%
  select(-Longitude,-Latitude)

## 3/14/2020 cumulative cases in US
US_03142020 <- US %>% 
  filter(Date=="3.14.20") %>% filter(str_detect(`Province/State`, pattern =",", negate=TRUE)) %>% 
  arrange(desc(`Confirmed Cases`))

kable(head(US_03142020), booktabs=T, row.names=F, caption = "Table 3: U.S. confirmed cases, deaths, and recovered by states")%>%
kable_styling(latex_options = "striped")

USsummary <- US_03142020 %>%
  summarize("Total confirmed cases"=sum(`Confirmed Cases`), "Total deaths"=sum(Deaths), "Total recovered"=sum(Recovered)) %>%
  mutate("% Death" = 100*`Total deaths`/`Total confirmed cases`, "% Recovery"=100*`Total recovered`/`Total confirmed cases`)%>%
  mutate_at(vars(`% Death`, `% Recovery`), funs(round(., 2)))

kable(USsummary, booktabs=T, row.names=F, caption = "Table 4: Summary of U.S. cumulative cases, deaths, and recovery as of 3/14/20")%>%
kable_styling(latex_options = "striped")

## using group_by and summarize to get some stats

### group_by two categorical variables to get the total number of confirmed cases, deaths, and recovered by country/region and province/state
asoftoday <- fulldata %>% 
  group_by_at (vars(`Province/State`,`Country/Region`)) %>% 
  summarize ( "confirmed cases as of 3/14/20"=max(`Confirmed Cases`), "deaths as of 3/14/20"=max(Deaths), "recovered as of 3/14/20"=max(Recovered)) %>%
  arrange(desc(`confirmed cases as of 3/14/20`))

glimpse(asoftoday)

allCase <- fulldata %>% group_by(Date) %>% 
  
  summarize(totalCase=sum(`Confirmed Cases`), totalDeath=sum(Deaths),totalRecovered=sum(Recovered)) %>%
  arrange(totalCase)

kable(allCase, booktabs=T, row.names=F, caption = "Table 5: Worldwide cumulative confirmed cases, deaths, and recovered from 1/22/20 to 3/14/20")%>%
kable_styling(latex_options = "striped")

deathRate_world=max(allCase$totalDeath)/max(allCase$totalCase)*100
signif(deathRate_world, digits = 3)
```
*As of March 14, 2020, Hubei Province in China has a cumulative of 67790 confirmed cases, with a death rate of 4.54% (Table 1). China has a cumulative total of 80977 confirmed cases, 3193 deaths, and 65660 recovered, with an average 3.94% death rate and an average 81.08% recovery rate (Table 2). However, as more and more patients are being treated effectively and recovered from COVID-19, the current cases are below 100 in all provinces except in Hubei (Table 2). In Hubei, the number of current cases is still over 10000.* 

*As of March 14, 2020, all U.S. states except West Virgina have reported at least 1 confirmed COVID-19 cases. The state of Washington has a cumulative of 572 confirmed cases, the state of New York has 525 confirmed cases, and California has 340 confirmed cases. The state of Washington also has 37 deaths, the most number of deaths among all the states (Table 3). The U.S. has a cumulative total of 2726 confirmed cases, 54 deaths, and 12 recovered, with an average death rate of 1.98% and an average recovery rate of 0.44% (Table 4). Although the averge death rate across all states remains low, individual stats, such as Washington and Florida, have much higher death rates. For example, the death rate in the stae of Washington reached 6.47% as of 3/14/2020. (Table 3)*

*As of March 14, 2020, total cumulative cases worldwide is 156102, with 5819 deaths and 72624 recovered (Table 5). The average death rate worldwide is 3.73%, while the average recovery rate is 46.52% (Table 6).*

```{R}
## Summary statistics

## summary stats for number of confirmed cases, deaths, and recovered by country/region and province/state
table_ns <- asoftoday %>%
  summarize("Mean of confirmed cases"=mean(`confirmed cases as of 3/14/20`),
            "Median of confirmed cases"=median(`confirmed cases as of 3/14/20`),
            "Mean of deaths"=mean(`deaths as of 3/14/20`),
            "Median of deaths"=median(`deaths as of 3/14/20`),
            "Mean of recovered"=mean(`recovered as of 3/14/20`),
            "Median of recovered"=median(`recovered as of 3/14/20`))

print(table_ns)

## summary stats for number of confirmed cases, deaths, and recovered worldwide
table_6 <- allCase %>% 
  summarize("Total"=max(`totalCase`),
            "Median"=median(`totalCase`),  
            'IQR'=IQR(totalCase),
            "Total death"=max(`totalDeath`), 
            "Median of deaths"=median(`totalDeath`),
            'IQR of deaths'=IQR(totalDeath),
            "Total recovered"=max(`totalRecovered`),
            "Median of recovered"=median(`totalRecovered`),
            'IQR of recovered'=IQR(totalRecovered))%>%
  mutate("% Death"=`Total death`/Total*100, "% Recovered"=`Total recovered`/Total*100)
  
kable(table_6, booktabs=T, row.names=T, digits = 2, caption = "Table 6: Summary statistics for worldwide confirmed cases, deaths, and recovery")%>%
kable_styling()%>%
add_header_above(c(" "=1, "Confirmed Cases" = 3, "Deaths" = 3, "Recovered"=3, " "=2))

## Total number of countries affected and which country has the highest/lowest number of cases
maximumCase <- fulldata %>%
group_by(`Country/Region`) %>%
summarize(max_confirmedCase=max(`Confirmed Cases`), max(Deaths), max(Recovered)) %>%
arrange(desc(max_confirmedCase))

glimpse(maximumCase)
count(maximumCase)

table_7 <- asoftoday %>%
  filter(`Country/Region`=="China" && `Province/State`=="Hubei" | `confirmed cases as of 3/14/20`==0)

kable(head(table_7), booktabs=T, row.names=F, caption = "Table 7: Province/States with the highest number of cases and zero cases")%>%
kable_styling(latex_options = "striped")

## correlation matrix of numeric variables
correlationMatrix <-fulldata %>%select(-Longitude,-Latitude,-Date, -`Province/State`,-`Country/Region`,-`% death`, -`% recovered`)
table_8 <- cor(correlationMatrix)

kable(table_8, booktabs=T, row.names=T, digit=2, caption = "Table 8: Correlation matrix of worldwide cumulative confirmed cases, deaths, and recovered")%>%
kable_styling(latex_options = "striped")
```
*The total nubmer of confirmed cases, deaths, and recovered worldwide are summarized in Table 6, together with their median and IQR. The interquartile ranges for confirmed cases, deaths, and recovered are quite high, indicating that there are large discrepancies among countries/regions.*

*As of March 14, 2020, COVID-19 has spreaded to 143 countries (maximumCase), and the numbers of deaths and recovered are highly correlated with the number of total confirmed cases (Table 8). Hubei, China has the highest number of cumulative confirmed cases, deaths, and recovered in the world as the novel coronavirus was firstly found there (Table 7). Although confirmed cases of COVID-19 are found in 49 states in the U.S., there are certain cities in the U.S. that have yet reported confirmed cases. These cities are summarized in Table 7.*

## 4. Visualizing (30 pts)

```{R}
## correlation heat map

## tidy up correlation matrix
tidycor<-cor(correlationMatrix)%>%as.data.frame%>%
rownames_to_column%>%
pivot_longer(-1,names_to="name",values_to="correlation")

## Plot!
tidycor %>%
  ggplot(aes(rowname,name,fill=correlation))+
geom_tile()+
scale_fill_gradient(low = "orange", high = "steelblue")+ #makes colors!
geom_text(aes(label=round(correlation,2)),color = "black", size = 4)+ #overlay values
theme(axis.text.x = element_text(angle = 45, hjust=1, color="black", size=12), axis.text.y = element_text(color="black", size=12))+ #flips x-axis labels
coord_fixed()+ #makes it square
  xlab("")+ylab("")+ # get rid of x- & y-axis
  labs(title = "Heat map of worldwide cumulative confirmed cases, deaths, \nand recovered")+
  theme(plot.title = element_text(color="black", size=10, face="bold.italic"))
```
*The heat map describing the correlations of the total nubmer of confirmed cases, deaths, and recovered shows that the number of deaths and the number of recovered are highly correlated with the number of confirmed cases, as the correlation scores are 0.98 and 0.86, respectively. The correlation between the number of deaths and the number of recovered is also high with a correlation score of 0.91. These findings are expected since as the number of confirmed cases increases, the number of deaths will also increase.*


```{R}
## plot 2: number of worldwide cases, deaths, and recovered v.s. time on the same plot

## Make 'Date' appear in order
allCase$Date <- as.factor(allCase$Date)
allCase$Date <- factor(allCase$Date, levels = allCase$Date[order(allCase$totalCase)])

## Convert dataset to longer format
allCase_1 <- allCase %>% 
  rename("Total confirmed cases"="totalCase", "Total number of death"="totalDeath", "Total number of recovered"="totalRecovered")%>% pivot_longer(c('Total confirmed cases', 'Total number of death', 'Total number of recovered'), names_to = "Type", values_to = "Number of cases") 

## Plot!
ggplot() +
  theme_economist() + scale_fill_economist() +
  theme(plot.title=element_text(family="OfficinaSanITC-Book"), text=element_text(family="OfficinaSanITC-Book"), axis.title.x = element_text(vjust=-5), axis.title.y = element_text(vjust=2))+
  geom_bar(data= allCase_1, aes(x=Date, y=`Number of cases`, fill=Type), stat="summary", width=1, position = "dodge")+
  labs(title="Number of confirmed cases, deaths, and recovered worldwide \n from 1/22/20 to 3/14/20", x="Date",y="Number of cases", fill="Type of cases")+
  scale_y_continuous(breaks = scales::pretty_breaks(n = 15), expand=c(0,0))+
  theme(plot.title = element_text(color="black", size=10, face="bold.italic"), axis.text.x = element_text(angle = 75, size=5, color="black"), axis.text.y = element_text(size=7), axis.title.x = element_text(size=8), axis.title.y = element_text(size=8), legend.position = "right", legend.title = element_text(size=8, face="bold"), legend.text = element_text(size=8))+
  geom_smooth(data=allCase, aes(x=Date, y=totalCase, group=1), se=F, size=0.7, color="chocolate")

```
*In this bar graph, the worldwide total number of confirmed cases of COVID-19, deaths resulted from COVID-19, and the nubmer of recovered patients from 1/22/2020 to 3/14/2020 is ploted. While the number of deaths resulted from COVID-19 remains low during this period, the total confirmed cases worldwide has been increasing exponentially. Before 2/17/2020, majority of the cases were identified in China, with the highest number of cases found in Hubei province. There appears to be a slow growing period in the total number of confirmed cases from 2/17/2020 to 2/23/2020, but it quickly continued  growing exponentially after that possibly due to the spreading of COVID-19 to Europe and other Asian countries.*


```{R}

## plot 3: number of total cases, deaths, and recovered v.s. time in China on the same plot

## creat a new dataset in time seires
ChinaTimeseries <- China %>% group_by(Date) %>%
  summarize("Total confirmed cases"=sum(`Confirmed Cases`), "Total number of death"=sum(Deaths), "Total number of recovered"=sum(Recovered))%>%
  arrange(`Total confirmed cases`)

## Make 'Date' appear in order
ChinaTimeseries$Date <- as.factor(ChinaTimeseries$Date)
ChinaTimeseries$Date <- factor(ChinaTimeseries$Date, levels = ChinaTimeseries$Date[order(ChinaTimeseries$`Total confirmed cases`)])

## convert dataset to longer format
ChinaTimeseries_1 <- ChinaTimeseries %>% pivot_longer(c('Total confirmed cases', 'Total number of death', 'Total number of recovered'), names_to = "Type", values_to = "Number of cases")

## Plot!
ggplot() +
  theme_economist() + scale_fill_economist() +
  theme(plot.title=element_text(family="OfficinaSanITC-Book"), text=element_text(family="OfficinaSanITC-Book"), axis.title.x = element_text(vjust=-5), axis.title.y = element_text(vjust=2))+
  geom_bar(data= ChinaTimeseries_1, aes(x=Date, y=`Number of cases`, fill=Type), stat="summary", width=1, position = "dodge")+
  labs(title="Number of confirmed cases, deaths, and recovered in China \n from 1/22/20 to 3/14/20", x="Date",y="Number of cases", fill="Type of cases")+
  scale_y_continuous(breaks = scales::pretty_breaks(n = 10), expand=c(0,0))+
  theme(plot.title = element_text(color="black", size=10, face="bold.italic"), axis.text.x = element_text(angle = 75, size=5, color="black"), axis.text.y = element_text(size=7), axis.title.x = element_text(size=8), axis.title.y = element_text(size=8), legend.position = "right", legend.title = element_text(size=8, face="bold"), legend.text = element_text(size=8))+
  geom_smooth(data=ChinaTimeseries, se=F, aes(x=Date, y=`Total confirmed cases`, group=1), size=0.7, color="chocolate")
```
*In this bar graph, the total number of confirmed cases of COVID-19, deaths resulted from COVID-19, and the number of recovered patients in China from 1/22/2020 to 3/14/2020 is ploted. From 1/22/20 to 2/17/20, the number of total confirmed cases increased exponentially in China, but from 2/17/20 to 3/14/20, the increase in the nubmer of confirmed cases has been slowed down dramatically due to effective control and containment of the infectious disease. This dramatic decrease is due to drastic measures such as city lockdown, isolation and quarantine, and social distancing. There was an almost 20000 increase in the nubmer of cases from 2/11/2020 to 2/12/2020, possibly due to the increase in the ability and capacity to test more patients during that period.*

*Although the number of cases has stopped increasing exponentially since 2/17/20, the nubmer of patients recovered is still increasing rapidly everyday thanks to the doctors and nurses who have been working very hard since the outbreak of COVID-19 in China, and the researchers and scientists who have been dedicatedly studying this novel coronavirus.*

```{R}

## plot 4: geographic distribution of confirmed cases in China

## Create a new dataset w/ latitudes and longitudes
China_geo <- fulldata %>% filter (`Country/Region`=="China")%>%
  select(-`% death`,-`% recovered`)

## 3/14/2020 cumulative cases in China w/ geographical info
China_03142020_geo <- China_geo %>% filter(Date=="3.14.20") %>%
  arrange(desc(`Confirmed Cases`)) %>%
  mutate("Current Cases"=`Confirmed Cases`-Deaths-Recovered)

## pivot from wide to long
China_03142020_geo1 <- China_03142020_geo %>%
  pivot_longer(c("Confirmed Cases","Current Cases"), names_to="Type of cases", values_to="Cases")

## Load map of China
China_map <- map_data("china")

## Plot!
ggplot() + 
  theme_economist() + scale_fill_economist() +
  theme(plot.title=element_text(family="OfficinaSanITC-Book"), text=element_text(family="OfficinaSanITC-Book"))+
  geom_polygon(data=China_map, aes(x = long, y = lat, group=group)) + 
  coord_fixed(1.5) +
  xlab("Longitude") + ylab("Latitude") +
    ggtitle("Distribution of cumulative and current confirmed cases in China \n as of 3/14/2020")+
  theme(plot.title = element_text(color="black", size=11.5, face="bold.italic"), axis.text.x = element_text(angle = 0, size=8, color="black"), axis.text.y = element_text(size=8), axis.title.x = element_text(size=8), axis.title.y = element_text(size=8)) +
  geom_point(data=China_03142020_geo1, aes(x=Longitude, y=Latitude, size=Cases), color="brown3", alpha=0.5)+
  scale_size_continuous(limits = c(1,70000), range = c(0, 15))+
  facet_wrap(. ~ `Type of cases`, ncol=2)+
  theme(legend.position = "bottom", legend.title = element_text(size=8, face="bold"), legend.text = element_text(size=8))+
  theme(strip.text.x = element_text(size=8,face="bold.italic"),
          strip.text.y = element_text(size=8,face="bold.italic"))
```
*The distribution of number of confirmed cases of COVID-19 as of 3/14/2020 in China is plotted in this graph. The size of the data points reflects the number of cases in a certain province. The larger the point, the more cases in that province. The point in Hubei province where COVID-19 was first identified is significantly larger than those in other provinces. From this graph, we can also see the spatial distribution of the infectious disease. Provinces that are closer to Hubei province have more cases compared to provinces that are farther away, indicating that the ease of transportation and travel could contribute to the spreading of COVID-19.*


```{R}  
## plot 5: geographic distribution of confirmed cases in the U.S.

## Create a new dataset w/ latitudes and longitudes
US_geo <- fulldata %>% filter (`Country/Region`=="US")%>%
  select(-`% death`,-`% recovered`, -Deaths, -Recovered)

## 3/10/2020-3/14/2020 cumulative cases in the U.S. w/ geographical info
US_03142020_geo <- US_geo %>% filter(Date=="3.14.20" | Date=="3.13.20" | Date=="3.12.20" |Date=="3.11.20"|Date=="3.10.20") %>%
  filter (`Province/State`!="Hawaii" & `Province/State`!="Alaska" & `Province/State`!="Puerto Rico" & `Province/State`!="Virgin Islands, U.S." & `Province/State`!="Diamond Princess") %>%
  arrange(Date)

## Load map of U.S.
USstates_map <- map_data("state")

## Plot!
ggplot(data = USstates_map) + 
  geom_polygon(aes(x = long, y = lat, group = group), color = "white") + 
  coord_fixed(1.3) +
  xlab("Longitude") + ylab("Latitude") +
    ggtitle("Distribution of cumulative confirmed cases in the U.S.\n from 3/10/2020 to 3/14/2020")+
  theme(plot.title = element_text(color="black", size=10, face="bold.italic"), axis.text.x = element_text(angle = 0, size=8, color="black"), axis.text.y = element_text(size=8), axis.title.x = element_text(size=8), axis.title.y = element_text(size=8)) +
  geom_point(data=US_03142020_geo, aes(x=Longitude, y=Latitude, size=`Confirmed Cases`), color="brown3", alpha=0.5)+
  scale_size_continuous(limits = c(1,700), range = c(0, 5))+
  theme(legend.position = "right", legend.title = element_text(size=8, face="bold"), legend.text = element_text(size=8)) +
  facet_wrap(. ~ Date, ncol=3, labeller=label_both) +
   theme(strip.text.x = element_text(size=8,face="bold.italic"),
          strip.text.y = element_text(size=8,face="bold.italic"))
```
*The spatial distribution of COVID-19 in each state and the increase of confirmed cases from 3/10/20 to 3/14/20 are shown in this graph. According to the sizes of the data points, we can observe that Washtington state, California, and New York have significantly more cases than other states. The increase in the nubmer of cases is also very apparent in some states, for example in Texas and Florida, within just five days, indicating the ability of the virus to rapidly spread if no control measures are implemented.*

## 5. Dimensionality Reduction (20 pts)

```{R}
# PCA steps
## 1. Prepare the data: center, scale, and transform
### I chose the "asoftoday" dataset I got by using group_by two categorical variables to get the total number of confirmed cases, deaths, and recovered by country/region and province/state

#### I only selected the numeric variables: confirmed cases, deaths, and recovered

asoftoday_nums <- asoftoday %>% ungroup %>%
  select(`confirmed cases as of 3/14/20`, `deaths as of 3/14/20`, `recovered as of 3/14/20`) %>% scale

#### I added country/region names to the respective rows
rownames(asoftoday_nums)<-asoftoday$`Country/Region`

asoftoday_nums<-data.frame(asoftoday_nums)

asoftoday_nums <- rename(asoftoday_nums, "Confirmed cases"="confirmed.cases.as.of.3.14.20","Deaths"="deaths.as.of.3.14.20",
"Recovered"="recovered.as.of.3.14.20")

```

```{R}
## 2. Perform PCA
### I performed PCA using "princomp" as the nubmer of columns in my data is less than the number of rows
asoftoday_pca<-princomp(asoftoday_nums)

summary(asoftoday_pca, loadings=T)

```
*Comp.1 in loadings is the general strength axis. All loadings/coefs have similar sign and magnitude, and therefore, a country with a higher score in Comp.1 tends to have more confirmed cases, more deaths, and more recovered. These characteristics correspond to countries that have been affected by COVID-19 for longer period of time and have contained the disease effectively, for example, China.*

*For Comp.2, confirmed cases and deaths contribute positively, while recovered contributes negatively. Thus, countries with high scores on PC2 tend to have more confirmed cases and deaths, but fewer recovered patients. These characteristics correspond to countries that are affected by COVID-19 for shorter period of time and the disease is currently rapidly spreading, for example, the U.S.*

*For Comp.3, confirmed cases contribute positively, while deaths and recovered contribute negatively. Thus, countries with high scores on PC3 tend to have more confirmed cases, but fewer deaths and recovered patients.*

```{R}
## 3. Choose the number of principal components to keep 

### Scree plot
eigval <- asoftoday_pca$sdev^2 #square to convert SDs to eigenvalues
varprop = round(eigval/sum(eigval), 2) #proportion of var explained by each PC

ggplot() + geom_bar(aes(y = varprop, x = 1:3), stat = "identity") + xlab("") + geom_path(aes(y = varprop, x = 1:3)) + 
 geom_text(aes(x = 1:3, y = varprop, label = round(varprop, 2)), vjust = 1, col = "white", size = 5) + 
 scale_y_continuous(breaks = seq(0, .8, .2), labels =  scales::percent) + 
 scale_x_continuous(breaks = 1:10)

### cumulative proportion of variance
round(cumsum(eigval)/sum(eigval), 2) #cumulative proportion of variance

### eigenvalues
eigval #eigenvalues

```
*Too choose the nubmer of principal components to keep, we can look at either a scree plot, the cumulative proportion of variance, or eigenvalues. The proportion of variance explained by PC1 is 0.96, while the proportion of variance explained by PC2 is 0.03. The scree plot quickly flattens at PC2.*

*We can also pick PCs until cumulative proportion of variance is larger than 80%. The cumulative proportion of variance is 0.96 for PC1, and the cumulative proportion of variance is 1 for both PC2 and PC3.*

*According to Kaiser's rule, we can pick PCs whose eigenvalues are greater than 1. Only PC1's eigenvalue is larger than 1. Based on the results obtained from all three methods and the selection criteria, only PC1 should be kept.*

```{R}

## 4. Grab PC scores from asoftoday_pca
asoftodaydf <- data.frame(PC1=asoftoday_pca$scores[, 1], PC2=asoftoday_pca$scores[, 2])

asoftoday <- as.data.frame(asoftoday)

### append PC scores to the original dataset
pcaplot <- cbind(asoftoday, asoftodaydf)

```

```{R}

## 5. Visualize and interpret

### Plotting new PC scores
ggplot(pcaplot, aes(PC1, PC2, color=`Country/Region`)) + geom_point() +
  coord_fixed() +
  theme(legend.position = "none")
  
### Plot of loadings (which vars contribute to which PCs)
asoftoday_pca$loadings[1:3, 1:2] %>% as.data.frame %>% rownames_to_column %>%
ggplot() + geom_hline(aes(yintercept=0), lty=2) +
geom_vline(aes(xintercept=0), lty=2) + ylab("PC2") + xlab("PC1") +
geom_segment(aes(x=0, y=0, xend=Comp.1, yend=Comp.2), arrow=arrow(), col="red") +
geom_label(aes(x=Comp.1*0.8, y=Comp.2*0.8, label=rowname), label.size = 0.05)

### Interpretation
countryname<-asoftoday$`Country/Region`
#### highest on PC1
asoftoday_pca$scores %>% as.data.frame %>% cbind(countryname, .) %>% top_n(3, Comp.1)
#### highest on PC2
asoftoday_pca$scores %>% as.data.frame %>% cbind(countryname, .) %>% top_n(3, wt=Comp.2)
#### lowest on PC2
asoftoday_pca$scores %>% as.data.frame %>% cbind(countryname, .) %>% top_n(3, desc(Comp.2))

```
*In this PCA plot, each data point with a different color represents a country. We can see that most of the data points clustered tighly togeter on the PCA plot, while only three points are extreme points that are significantly separated from the dense cluster. This plot demonstrates that most of the countries in the world are expriencing a similar phase of the spreading of COVID-19: rapid case increase, low death and low recovered. One datapoint has extremely high PC1, but very low PC2, meaning that this country has lots of confirmed cases, deaths, and recovery. Moreover, the proportion of recovered is high in this country.*

*From the plot of loadings, we can see that the nubmer of confirmed cases and the number of deaths are correlated the most as the angle is the smallest between these two variables. However, the number of deaths and the number of recovered are the least correlated variables.*

*China, Italy, and Iran ranked the highest on PC1, which makes sense given that COVID-19 was first identified in China, and later on spreaded to Italy and Iran, causing rapid increase in the number of cases in both countries. Italy, Iran, and Spain ranked the highest on PC2, which has chracteristics of high confirmed cases and deaths, and low recovery. Not surprisingly, three different cities in China raked the lowest on PC2. As doctors and nurses in China work hard to save and to take care of the infected patients, more and more have recovered.*   

```{R, echo=F}
## DO NOT DELETE THIS BLOCK!
sessionInfo()
Sys.time()
Sys.info()
```
